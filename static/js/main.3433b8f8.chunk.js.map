{"version":3,"sources":["InputCopy.jsx","DragItem.jsx","App.js","utils.js","index.js"],"names":["InputCopy","value","onChange","onRemove","className","e","target","onClick","navigator","clipboard","writeText","DragItem","index","moveCard","children","ref","useRef","useDrop","accept","collect","monitor","handlerId","getHandlerId","hover","item","current","dragIndex","hoverIndex","drop","useDrag","type","isDragging","drag","opacity","dragPreview","style","App","useState","JSON","parse","localStorage","getItem","id","uuid","values","setValues","useEffect","setItem","stringify","move","prevCards","update","$splice","$items","map","i","newValue","arr","newItem","filter","_","rootElement","document","getElementById","createRoot","render","DndProvider","backend","HTML5Backend"],"mappings":"oMAsBeA,MAtBf,SAAmB,GAAgC,IAA9BC,EAAK,EAALA,MAAOC,EAAQ,EAARA,SAAUC,EAAQ,EAARA,SAKpC,OACE,sBAAKC,UAAU,YAAW,UACxB,0BACEA,UAAU,mBACVH,MAAOA,EACPC,SAAU,SAACG,GAAC,OAAKH,EAASG,EAAEC,OAAOL,MAAM,IAE3C,wBAAQG,UAAU,oBAAoBG,QAX7B,WACXC,UAAUC,UAAUC,UAAUT,EAChC,EASwD,kBAGpD,wBAAQG,UAAU,oBAAoBG,QAASJ,EAAS,iBAK9D,E,gBC2BeQ,EA5CE,SAAH,GAAuC,IAAjCC,EAAK,EAALA,MAAOC,EAAQ,EAARA,SAAUC,EAAQ,EAARA,SAC7BC,EAAMC,iBAAO,MACnB,EAA8BC,YAAQ,CACpCC,OAAQ,MACRC,QAAO,SAACC,GACN,MAAO,CACLC,UAAWD,EAAQE,eAEvB,EACAC,MAAK,SAACC,EAAMJ,GACV,GAAKL,EAAIU,QAAT,CAGA,IAAMC,EAAYF,EAAKZ,MACjBe,EAAaf,EAEfc,IAAcC,IAGlBd,EAASa,EAAWC,GACpBH,EAAKZ,MAAQe,EARb,CASF,IACA,mBApBoBC,GAAJ,KAATP,UAAiB,MAqB1B,EAA4CQ,YAAQ,CAClDC,KAAM,MACNN,KAAM,WACJ,MAAO,CAAEZ,QACX,EACAO,QAAS,SAACC,GAAO,MAAM,CACrBW,WAAYX,EAAQW,aACrB,IACD,mBAROA,EAAU,KAAVA,WAAcC,EAAI,KASrBC,EAAUF,EAAa,EAAI,EAEjC,OADAG,EAVwC,MAU5BN,EAAKb,IAEf,sBAAKX,UAAU,WAAWW,IAAKA,EAAKoB,MAAO,CAAEF,WAAU,UACrD,qBAAK7B,UAAU,mBAAmBW,IAAKiB,EAAK,oBAG3ClB,IAGP,E,0CCrCe,SAASsB,IAAO,IAAD,EAC5B,EAA4BC,mBACgB,QADR,EAClCC,KAAKC,MAAMC,aAAaC,QAAQ,kBAAU,QAAI,CAC5C,CAAEC,GAAIC,cAAQ1C,MAAO,KACrB,CAAEyC,GAAIC,cAAQ1C,MAAO,OAExB,mBALM2C,EAAM,KAAEC,EAAS,KAOxBC,qBAAU,WACRN,aAAaO,QAAQ,SAAUT,KAAKU,UAAUJ,GAChD,GAAG,CAACA,IAEJ,IAAMK,EAAO,SAACvB,EAAWC,GACvBkB,GAAU,SAACK,GAAS,OAClBC,IAAOD,EAAW,CAChBE,QAAS,CACP,CAAC1B,EAAW,GACZ,CAACC,EAAY,EAAGuB,EAAUxB,MAE5B,GAEN,EAEM2B,EAAST,EAAOU,KAAI,SAAC9B,EAAM+B,GAAC,OAChC,cAAC,EAAQ,CAAe3C,MAAO2C,EAAG1C,SAAUoC,EAAK,SAC/C,cAAC,EAAS,CACRhD,MAAOuB,EAAKvB,MACZC,SAAU,SAACsD,GAAQ,OACjBX,GChCiBY,EDgCIb,EChCChC,EDgCO2C,EChCAG,EDgCG,CAAEhB,GAAIlB,EAAKkB,GAAIzC,MAAOuD,GC/BvDC,EAAIH,KAAI,SAAC9B,EAAM+B,GAAC,OAAMA,IAAM3C,EAAQ8C,EAAUlC,CAAI,MADpD,IAAoBiC,EAAK7C,EAAO8C,CDgCqC,EAEpEvD,SAAU,kBAAM0C,GC9BOjC,ED8BqB2C,EAARX,EC7B/Be,QAAO,SAACC,EAAGL,GAAC,OAAKA,IAAM3C,CAAK,MADlC,IAAwBA,CD8BwB,KANpCY,EAAKkB,GAQT,IAGb,OACE,sBAAKtC,UAAU,MAAK,UACjBiD,EACD,wBACEjD,UAAU,MACVG,QAAS,kBAAMsC,GChDEY,EDgDiBb,EChDZpB,EDgDoB,CAAEkB,GAAIC,cAAQ1C,MAAO,IC/C/D,GAAN,mBAAWwD,GAAG,CAAEjC,MADX,IAAkBiC,EAAKjC,CDgD+C,EAAC,oBAM9E,CE/CA,IAAMqC,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAU,UACT,cAACC,EAAA,EAAW,CAACC,QAASC,IAAa,SACjC,cAAChC,EAAG,Q","file":"static/js/main.3433b8f8.chunk.js","sourcesContent":["function InputCopy({ value, onChange, onRemove }) {\r\n  const copy = () => {\r\n    navigator.clipboard.writeText(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"inputcopy\">\r\n      <textarea\r\n        className=\"inputcopy__input\"\r\n        value={value}\r\n        onChange={(e) => onChange(e.target.value)}\r\n      ></textarea>\r\n      <button className=\"inputcopy__button\" onClick={copy}>\r\n        copy\r\n      </button>\r\n      <button className=\"inputcopy__remove\" onClick={onRemove}>\r\n        x\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputCopy;\r\n","import { useRef } from \"react\";\r\nimport { DragPreviewImage, useDrag, useDrop } from \"react-dnd\";\r\n\r\nconst DragItem = ({ index, moveCard, children }) => {\r\n  const ref = useRef(null);\r\n  const [{ handlerId }, drop] = useDrop({\r\n    accept: \"BOX\",\r\n    collect(monitor) {\r\n      return {\r\n        handlerId: monitor.getHandlerId()\r\n      };\r\n    },\r\n    hover(item, monitor) {\r\n      if (!ref.current) {\r\n        return;\r\n      }\r\n      const dragIndex = item.index;\r\n      const hoverIndex = index;\r\n      // Don't replace items with themselves\r\n      if (dragIndex === hoverIndex) {\r\n        return;\r\n      }\r\n      moveCard(dragIndex, hoverIndex);\r\n      item.index = hoverIndex;\r\n    }\r\n  });\r\n  const [{ isDragging }, drag, dragPreview] = useDrag({\r\n    type: \"BOX\",\r\n    item: () => {\r\n      return { index };\r\n    },\r\n    collect: (monitor) => ({\r\n      isDragging: monitor.isDragging()\r\n    })\r\n  });\r\n  const opacity = isDragging ? 0 : 1;\r\n  dragPreview(drop(ref));\r\n  return (\r\n    <div className=\"dragitem\" ref={ref} style={{ opacity }}>\r\n      <div className=\"dragitem__handle\" ref={drag}>\r\n        handle\r\n      </div>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DragItem;\r\n","import { useCallback, useEffect, useState } from \"react\";\nimport InputCopy from \"./InputCopy\";\nimport DragItem from \"./DragItem\";\nimport { appended, replacedAt, removedAt, movedFromTo } from \"./utils\";\nimport update from \"immutability-helper\";\nimport { v4 as uuid } from \"uuid\";\nimport \"./styles.css\";\n\nexport default function App() {\n  const [values, setValues] = useState(\n    JSON.parse(localStorage.getItem(\"values\")) ?? [\n      { id: uuid(), value: \"0\" },\n      { id: uuid(), value: \"1\" }\n    ]\n  );\n\n  useEffect(() => {\n    localStorage.setItem(\"values\", JSON.stringify(values));\n  }, [values]);\n\n  const move = (dragIndex, hoverIndex) => {\n    setValues((prevCards) =>\n      update(prevCards, {\n        $splice: [\n          [dragIndex, 1],\n          [hoverIndex, 0, prevCards[dragIndex]]\n        ]\n      })\n    );\n  };\n\n  const $items = values.map((item, i) => (\n    <DragItem key={item.id} index={i} moveCard={move}>\n      <InputCopy\n        value={item.value}\n        onChange={(newValue) =>\n          setValues(replacedAt(values, i, { id: item.id, value: newValue }))\n        }\n        onRemove={() => setValues(removedAt(values, i))}\n      />\n    </DragItem>\n  ));\n\n  return (\n    <div className=\"App\">\n      {$items}\n      <button\n        className=\"add\"\n        onClick={() => setValues(appended(values, { id: uuid(), value: \"\" }))}\n      >\n        +ADD\n      </button>\n    </div>\n  );\n}\n","export function appended(arr, item) {\r\n  return [...arr, item];\r\n}\r\n\r\nexport function replacedAt(arr, index, newItem) {\r\n  return arr.map((item, i) => (i === index ? newItem : item));\r\n}\r\n\r\nexport function removedAt(arr, index) {\r\n  return arr.filter((_, i) => i !== index);\r\n}\r\n\r\nexport function movedFromTo(arr, i_from, i_to) {\r\n  if (i_from < i_to) {\r\n    return [\r\n      ...arr.slice(0, i_from),\r\n      ...arr.slice(i_from + 1, i_to + 1),\r\n      arr[i_from],\r\n      ...arr.slice(i_to + 1)\r\n    ];\r\n  }\r\n\r\n  if (i_from > i_to) {\r\n    return [\r\n      ...arr.slice(0, i_to),\r\n      arr[i_from],\r\n      ...arr.slice(i_to, i_from),\r\n      ...arr.slice(i_from + 1)\r\n    ];\r\n  }\r\n\r\n  return arr;\r\n}\r\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <DndProvider backend={HTML5Backend}>\n      <App />\n    </DndProvider>\n  </StrictMode>\n);\n"],"sourceRoot":""}